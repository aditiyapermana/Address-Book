{"remainingRequest":"/home/adit/taskDeveloper/address-book/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adit/taskDeveloper/address-book/src/views/Contact.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/adit/taskDeveloper/address-book/src/views/Contact.vue","mtime":1572668630941},{"path":"/home/adit/taskDeveloper/address-book/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adit/taskDeveloper/address-book/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/adit/taskDeveloper/address-book/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/adit/taskDeveloper/address-book/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/adit/taskDeveloper/address-book/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb250YWN0IHsKbWFyZ2luOiBhdXRvOwpib3JkZXI6IDZweDsKYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSwgcmdiYSgyMzgsMTc0LDIwMiwxKSAwJSwgcmdiYSgxNDgsMTg3LDIzMywxKSAxMDAlKTsKcGFkZGluZzogMTBweDsKfQo="},{"version":3,"sources":["Contact.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA","file":"Contact.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"contact\">\n\n  <el-input placeholder=\"name\" v-model=\"formInput.name\"></el-input><br>\n  <el-input placeholder=\"address\" v-model=\"formInput.address\"></el-input><br>\n  <el-input placeholder=\"phone\" v-model=\"formInput.phone\"></el-input><p>\n\n  <el-button @click=\"createContact\" v-if=\"!selectedId\">create Users</el-button><p>\n  <el-button @click=\"editContact\" v-if=\"selectedId\">edit Users</el-button></p>\n\n    <el-table :data=\"tableData\" style=\"width: 100%\">\n    <el-table-column fixed prop=\"name\" label=\"Name\" width=\"150\"></el-table-column>\n\n    <el-table-column prop=\"address\" label=\"Address\" width=\"120\"></el-table-column>\n\n    <el-table-column prop=\"phone\" label=\"Phone\" width=\"120\"></el-table-column>\n\n    <el-table-column>\n      <template slot-scope=\"scope\">\n        <el-button @click=\"deleteContact(scope.row.id)\" type=\"text\" size=\"small\">Delete</el-button>\n        <el-button @click=\"getUser(scope.row.id)\" type=\"text\" size=\"small\">edit</el-button>\n      </template>\n    </el-table-column>\n  </el-table>\n\n  </div>\n</template>\n\n<script>\n//import axios from 'axios'\nimport {mapActions, mapState} from 'vuex';\n\nexport default {\n  name: 'contact',\n\n    computed: mapState({\n      tableData: state => state.tableData,\n      formInput: state => state.formInput,\n      selectedId: state => state.selectedId\n    }),\n\n  created(){\n    this.getUsers()\n\n  },\n\n  methods: {\n    //get users\n    ...mapActions([\"getUsers\", \"deleteUsers\", \"createUsers\", \"editUsers\", \"getUser\"]),\n\n    //edit users\n    /*async editUsers() {\n      await axios.patch(`https://address-book-exp-api.herokuapp.com/users/${this.selectedId}`,{\n        name: this.formInput.name,\n        address: this.formInput.address,\n        phone: this.formInput.phone,\n        });\n        this.getUsers();\n        this.formInput = {\n        name: \"\",\n        address: \"\",\n        phone: \"\"\n      };\n      this.selectedId = \"\"\n    },*/\n\n    //get user untuk edit\n    /*async getUser(id) {\n        const {data} = await axios.get(`https://address-book-exp-api.herokuapp.com/users/${id}`);\n\n        this.formInput = {\n          name: data.name,\n          address: data.address,\n          phone: data.phone,\n        };\n        this.selectedId = id;\n        \n      },*/\n\n\n    deleteContact(scopeid) {\n      this.deleteUsers(scopeid)\n    },\n\n    createContact() {\n      if(this.formInput.name.length &&\n      this.formInput.address.length &&\n      this.formInput.phone.length > 0)\n      {\n      this.createUsers();\n      }\n    },\n\n\n    editContact(id) {\n\n      if(this.formInput.name.length &&\n      this.formInput.address.length &&\n      this.formInput.phone.length > 0)\n      {\n      this.editUsers();\n      }\n      }\n    }\n  }\n\n</script>\n\n<style>\n  .contact {\n  margin: auto;\n  border: 6px;\n  background: radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%);\n  padding: 10px;\n  }\n</style>\n"]}]}